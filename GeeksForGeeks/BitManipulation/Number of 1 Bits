********************************************************************************************************************************************************************
                                                                   Number of 1 Bits
********************************************************************************************************************************************************************


GFG Link:- https://practice.geeksforgeeks.org/problems/set-bits0143/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

Given a positive integer N, print count of set bits in it. 

Example 1:

Input:
N = 6
Output:
2
Explanation:
Binary representation is '110' 
So the count of the set bit is 2.
Example 2:

Input:
8
Output:
1
Explanation:
Binary representation is '1000' 
So the count of the set bit is 1.
Your Task:  
You don't need to read input or print anything. Your task is to complete the function setBits() which takes an Integer N and returns the count of number of set bits.

Expected Time Complexity: O(LogN)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ N ≤ 109



********************************************************************************************************************************************************************
                                                                               CODE- APPROACH 1
********************************************************************************************************************************************************************

class Solution {
    static int setBits(int N) {
        int count=0;
        while(N!=0)
        {
            int rmsb= N&(-N);
            N=N-rmsb;
            count++;
        }
        return count;
    }
}



********************************************************************************************************************************************************************
                                                                               CODE- APPROACH 2
********************************************************************************************************************************************************************

class Solution {
    static int setBits(int N) {
        //STEPS FOR SOLUTION:-
        //1)Use a for loop and run the loop from 0 to 31- 32 bits
        //2)Check for every ith index that the ith index bit and 1==1 or not- if it is then increment count
        
        int count=0;
        for(int i=0; i<32; i++)
        {
            if(((N>>i)&1)==1)       //Left Shift Operator- >>
                count++;
        }
        return count;
    }
}

