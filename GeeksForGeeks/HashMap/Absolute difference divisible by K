********************************************************************************************************************************************************************
                                                                  Absolute difference divisible by K
********************************************************************************************************************************************************************

GFG Link:- https://practice.geeksforgeeks.org/problems/e0059183c88ab680b2f73f7d809fb8056fe9dc43/1


Given an array of integers of size n and an integer k, find all the pairs in the array whose absolute difference is divisible by k.

Example 1:

Input:
n = 3
arr[] = {3, 7, 11}
k = 4
Output:
3
Explanation:
(11-3) = 8 is divisible by 4
(11-7) = 4 is divisible by 4
(7-3) = 4 is divisible by 4

Example 2:

Input:
n = 4
arr[] = {1, 2, 3, 4}
k = 2
Output :
2
Explanation:
Valid pairs are (1,3), and (2,4).

Your Task:  
You don't need to read input or print anything. Your task is to complete the function countPairs() which takes integers n, array arr[ ], integer k as input parameters and returns the number of pairs whose absolute difference is divisible by k.
Note: The answer may be large so use 64-bit integer. 


Expected Time Complexity: O(n + k)
Expected Auxiliary Space: O(k)


Constraints:
2 ≤ n ≤ 105
1 ≤ k,arr[i] ≤ 105





********************************************************************************************************************************************************************
                                                                               CODE
********************************************************************************************************************************************************************

class Solution {
	static long countPairs(int n, int[] arr, int k) {
		//STEPS FOR SOLUTION:-
		//1)Modify all values of array arr -> arr[i]= arr[i]%k- so that arr contains all values modulus of k
		//2)Create a Hashmap and for each iteration in arr, find if map contains value= k-arr[i]
		//3)If arr[i]=0 then find if map contains 0
		//4)Taking a variable count- count+map.get(value)
		//5)At the end return count
		
		for(int i=0; i<n; i++)
		    arr[i]= arr[i]%k;
		   
		HashMap<Integer,Integer> map= new HashMap<>();
		
		int count=0;
		for(int i=0; i<n; i++)
		{
		    if(arr[i]==0 && map.containsKey(0))
		        count=count+map.get(0);
		    if(arr[i]!=0 && map.containsKey(k-arr[i]))
		        count=count+map.get(k-arr[i]);
		        
		    if(arr[i]==0)
		        map.put(arr[i],map.getOrDefault(arr[i],0)+1);
		    else
		        map.put(k-arr[i],map.getOrDefault(k-arr[i],0)+1);
		}
		
		return count;
	}
}
