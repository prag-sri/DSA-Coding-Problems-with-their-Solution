********************************************************************************************************************************************************************
                                                                       Word Pattern
********************************************************************************************************************************************************************


LeetCode Link:- https://leetcode.com/problems/word-pattern/description/


Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
 

Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.




********************************************************************************************************************************************************************
                                                                               CODE
********************************************************************************************************************************************************************

class Solution {
    public boolean wordPattern(String pattern, String s) {
        //STEPS FOR SOLUTION:-
        //1)Create a String array of s, namely arr
        //2)Use a HashMap and for every ith char of pattern store ith element of arr as value- only if key is not present
        //3)Also create a HashMap to store values so that for another key same value should not be stored
        //4)If key is present then check that ith element of arr is equal to the value of key- if not return false else return true

        String arr[]= s.split(" ");
        int n= pattern.length();
        if(n!=arr.length)
            return false;
        HashMap<Character,String> map= new HashMap<>();
        HashMap<String,Integer> map1= new HashMap<>();
        for(int i=0; i<n; i++)
        {
            if(!map.containsKey(pattern.charAt(i)))
            {
                if(!map1.containsKey(arr[i]))
                {
                    map.put(pattern.charAt(i),arr[i]);
                    map1.put(arr[i],1);
                }  
                else
                    return false;
            }
                
            else
            {
                if(!map.get(pattern.charAt(i)).equals(arr[i]))
                    return false;
            }
        }
        return true;
    }
}
