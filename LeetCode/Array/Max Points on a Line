********************************************************************************************************************************************************************
                                                                       Max Points on a Line
********************************************************************************************************************************************************************

LeetCode Link:- https://leetcode.com/problems/max-points-on-a-line/description/


Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line.


Example 1:

Input: points = [[1,1],[2,2],[3,3]]
Output: 3
Example 2:


Input: points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]
Output: 4
 

Constraints:

1 <= points.length <= 300
points[i].length == 2
-104 <= xi, yi <= 104
All the points are unique.


********************************************************************************************************************************************************************
                                                                               CODE
********************************************************************************************************************************************************************

class Solution {
    public int maxPoints(int[][] points) {
        int n= points.length;
         //0 lines formed by 0 point, 1 line formed by 1 point and 2 lines formed by 2 points
        if(n<=2)        
            return n;   

        int ans=2;
        for(int i=0; i<n; i++)
        {
            for(int j=i+1; j<n; j++)
            {
                int temp=2;     //minimum lines formed by 3 points= 2
                for(int k=j+1; k<n; k++)
                {
                    //calculating slope of 3 points and comparing them- use formula: (y2 - y1) * (x3 - x1) = (y3 - y1) * (x2 - x1)
                    int a= (points[j][1]-points[i][1])*(points[k][0]-points[i][0]);
                    int b= (points[k][1]-points[i][1])*(points[j][0]-points[i][0]);
                    if(a==b)
                        temp++;
                }
                if(temp>ans)
                    ans= temp;
            }
        } 

        return ans;  
    }
}
