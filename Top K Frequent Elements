//Top K Frequent Elements
//LeetCode Link:- https://leetcode.com/problems/top-k-frequent-elements/

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        //STEPS FOR SOLUTION:-
        //1)Create a HashMap and store nums[i] as key and its frequency as value
        //2)Store this key value pairs in ArrayList of an ArrayList
        //3)Sort the ArrayList based on the frequency of the keys
        //4)Run a loop and return k most frequent nums[i] in an array ans
        
        int n= nums.length;
        HashMap<Integer,Integer> map= new HashMap<>();
        for(int i=0; i<n; i++)
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        
        List<List<Integer>> list= new ArrayList<>();
        for(Integer key: map.keySet())
        {
            List<Integer> curr= new ArrayList<>();
            curr.add(key);
            curr.add(map.get(key));
            list.add(curr);
        }
        
        Collections.sort(list,(x,y) -> x.get(1)==y.get(1)?(x.get(0)<y.get(0)?1:-1):(x.get(1)<y.get(1)?1:-1));
            
        int ans[]= new int[k];
        for(int i=0; i<k; i++)
            ans[i]= list.get(i).get(0);
        
        return ans;
    }
}
